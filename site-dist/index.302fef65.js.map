{"mappings":"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","sources":["node_modules/@microsoft/atlas-js/dist/utilities/util.js","node_modules/@microsoft/atlas-js/dist/elements/form-behavior.js","node_modules/@microsoft/atlas-js/dist/behaviors/popover.js","site/index.js"],"sourcesContent":["let nextId = 0;\nexport function generateElementId() {\n    return `bx-${nextId++}`;\n}\nexport function kebabToCamelCase(str) {\n    return str.replace(/-./g, x => x[1].toUpperCase());\n}\n","import { generateElementId, kebabToCamelCase } from '../utilities/util';\nexport const defaultMessageStrings = {\n    contentHasChanged: 'Content has changed, please reload the page to get the latest changes.',\n    inputMaxLength: '{inputLabel} cannot be longer than {maxLength} characters.',\n    inputMinLength: '{inputLabel} must be at least {minLength} characters.',\n    inputRequired: '{inputLabel} is required.',\n    pleaseFixTheFollowingIssues: 'Please fix the following issues to continue:',\n    thereAreNoEditsToSubmit: 'There are no edits to submit.',\n    weEncounteredAnUnexpectedError: 'We encountered an unexpected error. Please try again later. If this issue continues, please contact site support.'\n};\n// <form-behavior>\nexport class FormBehaviorElement extends HTMLElement {\n    submitting = false;\n    initialData = new FormData();\n    toDispose = [];\n    isDirty = false;\n    commitTimeout = 0;\n    locStrings = Object.assign({}, defaultMessageStrings, Array.from(this.attributes)\n        .filter(a => a.name.startsWith('loc-'))\n        .reduce((map, a) => {\n        map[kebabToCamelCase(a.name.substring(4))] = a.value;\n        return map;\n    }, {}));\n    validators = [\n        this.validateMinLength.bind(this),\n        this.validateRequired.bind(this),\n        this.validateMaxLength.bind(this)\n    ];\n    constructor() {\n        super();\n        this.locStrings = this.locStrings;\n    }\n    get canSave() {\n        return this.isDirty || this.isNew;\n    }\n    get form() {\n        return this.closest(`form`);\n    }\n    // disable browser message when leaving page\n    get hideUnloadMessage() {\n        return this.hasAttribute('nounload');\n    }\n    // use the new attribute when you want to ignore isDirty validation (for example, if the only user action on the form is to click a button)\n    get isNew() {\n        return this.hasAttribute('new');\n    }\n    connectedCallback() {\n        const form = this.parentElement;\n        if (!(form instanceof HTMLFormElement)) {\n            return;\n        }\n        form.setAttribute('novalidate', '');\n        const errorSummaryContainer = document.createElement('div');\n        errorSummaryContainer.setAttribute('data-form-error-container', '');\n        this.insertAdjacentElement('afterend', errorSummaryContainer);\n        this.initialData = new FormData(form);\n        if (this.ownerDocument.readyState === 'loading') {\n            this.ownerDocument.addEventListener('readystatechange', () => (this.initialData = new FormData(form)));\n        }\n        this.subscribe(form, 'input', this);\n        this.subscribe(form, 'change', this);\n        this.subscribe(form, 'submit', this);\n        this.subscribe(window, 'beforeunload', this);\n    }\n    disconnectedCallback() {\n        for (const dispose of this.toDispose) {\n            dispose();\n        }\n    }\n    subscribe(target, type, listener) {\n        target.addEventListener(type, listener);\n        this.toDispose.push(() => target.removeEventListener(type, listener));\n    }\n    setDirty() {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        const initial = new URLSearchParams(this.initialData).toString();\n        const current = new URLSearchParams(\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        new FormData(this.parentElement)).toString();\n        this.isDirty = current !== initial;\n    }\n    handleEvent(event) {\n        switch (event.type) {\n            case 'submit':\n                this.handleSubmitEvent(event);\n                break;\n            case 'beforeunload':\n                this.handleUnloadEvent(event);\n                break;\n            case 'input':\n                this.clearValidationErrors(event.target);\n                this.scheduleCommit(event);\n                break;\n            case 'change':\n                this.clearValidationErrors(event.target);\n                this.commit(event);\n                break;\n            default:\n                throw new Error(`Unexpected event ${event.type}.`);\n        }\n    }\n    navigate(href) {\n        const navigate = navigateAfterSubmit(href, this.getAttribute('navigation'));\n        return navigate;\n    }\n    scheduleCommit(event) {\n        clearTimeout(this.commitTimeout);\n        setTimeout(this.commit, 300, event);\n    }\n    commit = (event) => {\n        if (!isValueElement(event.target, this.form) ||\n            !event.target?.form ||\n            event.target?.form !== this.parentElement) {\n            return;\n        }\n        clearTimeout(this.commitTimeout);\n        if (event.type === 'change') {\n            normalizeInputValue(event.target);\n        }\n        this.setDirty();\n    };\n    async handleUnloadEvent(event) {\n        this.setDirty();\n        if (!this.isDirty || this.hideUnloadMessage) {\n            return;\n        }\n        event.preventDefault();\n        event.returnValue = 'You have unsaved work.'; // browser overrides this text\n    }\n    async handleSubmitEvent(event) {\n        event.preventDefault();\n        if (this.submitting) {\n            return;\n        }\n        const form = event.currentTarget;\n        // reject the submit if no edits have been made (overridable with the new attribute)\n        if (!this.canSave) {\n            this.showNoChangesMessage(form);\n            const validationErrorEvent = new CustomEvent('form-validating', {\n                detail: {\n                    form\n                },\n                bubbles: true\n            });\n            this.dispatchEvent(validationErrorEvent);\n            return;\n        }\n        let isNavigating = false;\n        try {\n            this.submitting = true;\n            setBusySubmitButton(form, this.submitting);\n            const result = await this.validateForm(form);\n            if (!result.valid) {\n                return;\n            }\n            const url = handleSubmitButtonAction(event) ?? form.action;\n            const params = new URL(url).searchParams;\n            const formData = new FormData(form);\n            // set and read headers:\n            const headers = new Headers();\n            headers.set('content-type', 'application/json');\n            for (const { name, value } of this.attributes) {\n                if (name.startsWith('header-')) {\n                    headers.set(name.substring(7), value);\n                }\n            }\n            // form.method does not support PUT or DELETE events, use method queryParam if it exists.\n            const method = params.get('_method') || form.method || 'GET';\n            const init = {\n                method,\n                body: JSON.stringify(Object.fromEntries(formData)),\n                headers\n            };\n            const beforeSubmitEvent = new CustomEvent('beforesubmit', {\n                detail: {\n                    url,\n                    init,\n                    form\n                },\n                bubbles: true,\n                cancelable: true\n            });\n            const cancelled = !this.dispatchEvent(beforeSubmitEvent);\n            if (cancelled) {\n                return;\n            }\n            const request = new Request(beforeSubmitEvent.detail.url, beforeSubmitEvent.detail.init);\n            const response = await fetch(request);\n            if (response.ok) {\n                this.removeAttribute('new');\n                this.initialData = formData;\n                this.setDirty();\n                this.dispatchEvent(new CustomEvent('aftersubmit', {\n                    detail: {\n                        request,\n                        response\n                    },\n                    bubbles: true\n                }));\n                isNavigating = this.navigate(response.headers.get('location') ?? this.getAttribute('navigation-href'));\n            }\n            else {\n                const { errorAlert, errorList } = this.getErrorAlert(form);\n                const errorText = document.createElement('li');\n                errorText.innerText = this.locStrings.weEncounteredAnUnexpectedError;\n                // custom text for version mismatch\n                if (response.status === 412) {\n                    errorText.innerText = this.locStrings.contentHasChanged;\n                }\n                this.dispatchEvent(new CustomEvent('submission-error', {\n                    detail: {\n                        form,\n                        request,\n                        response\n                    },\n                    bubbles: true\n                }));\n                errorList.appendChild(errorText);\n                errorAlert.hidden = false;\n                errorAlert.focus();\n            }\n        }\n        finally {\n            this.submitting = isNavigating;\n            setBusySubmitButton(form, this.submitting);\n        }\n    }\n    createErrorAlert(form) {\n        const formLayout = form.querySelector('[data-form-error-container]') || form;\n        const alertId = generateElementId();\n        const errorAlert = document.createElement('div');\n        errorAlert.className =\n            'help help-danger background-color-danger-light border border-color-danger border-radius padding-xs margin-bottom-sm';\n        errorAlert.setAttribute('data-form-error-alert', '');\n        errorAlert.setAttribute('role', 'alert');\n        errorAlert.setAttribute('aria-labelledby', alertId);\n        errorAlert.setAttribute('tabindex', '-1');\n        errorAlert.hidden = true;\n        const alertText = document.createElement('p');\n        alertText.id = alertId;\n        alertText.className = 'font-size-md font-weight-semibold margin-bottom-xs display-inline-flex';\n        alertText.innerText = this.locStrings.pleaseFixTheFollowingIssues;\n        const errorList = document.createElement('ul');\n        errorList.setAttribute('aria-label', 'Validation errors');\n        errorList.classList.add('margin-left-sm-tablet');\n        errorAlert.append(alertText, errorList);\n        formLayout.appendChild(errorAlert);\n        return { errorAlert, errorList };\n    }\n    getErrorAlert(form) {\n        const errorAlert = form.querySelector('[data-form-error-alert]');\n        if (errorAlert) {\n            return {\n                errorAlert,\n                errorList: errorAlert.lastElementChild\n            };\n        }\n        return this.createErrorAlert(form);\n    }\n    validateRequired(input, label) {\n        if (input.validity.valueMissing) {\n            return `${this.locStrings.inputRequired.replace('{inputLabel}', customElements.get(input.localName) ? `A selection for \"${label}\"` : label)}`;\n        }\n        return null;\n    }\n    validateMinLength(input, label) {\n        if ((input instanceof HTMLTextAreaElement || input instanceof HTMLInputElement) &&\n            (input.validity.tooShort || (input.minLength > 0 && input.value.length < input.minLength))) {\n            return `${this.locStrings.inputMinLength\n                .replace('{inputLabel}', label)\n                .replace('{minLength}', input.minLength.toString())}`;\n        }\n        return null;\n    }\n    validateMaxLength(input, label) {\n        if ((input instanceof HTMLTextAreaElement || input instanceof HTMLInputElement) &&\n            (input.validity.tooLong || (input.maxLength > 0 && input.value.length > input.maxLength))) {\n            return `${this.locStrings.inputMaxLength\n                .replace('{inputLabel}', label)\n                .replace('{maxLength}', input.maxLength.toString())}`;\n        }\n        return null;\n    }\n    async validateForm(form, displayValidity = true, scope = form) {\n        const errors = [];\n        const { errorAlert, errorList } = this.getErrorAlert(form);\n        if (displayValidity) {\n            errorAlert.hidden = true;\n            errorList.innerHTML = '';\n        }\n        const customElements = collectCustomElementsByName(form);\n        for (const input of [...form.elements, ...customElements]) {\n            if (!scope.contains(input) || !canValidate(input, form)) {\n                continue;\n            }\n            if (input.hasAttribute('aria-hidden') === true) {\n                continue;\n            }\n            // Don't check combobox\n            if (input.getAttribute('role') === 'combobox') {\n                continue;\n            }\n            // Don't check elements that are part of markdown editor\n            if (input.closest('docs-markdown-editor')) {\n                continue;\n            }\n            if (input.hasAttribute('data-skip-validation')) {\n                const validationErrorEvent = new CustomEvent('form-validating', {\n                    detail: {\n                        errors,\n                        form\n                    },\n                    bubbles: true\n                });\n                this.dispatchEvent(validationErrorEvent);\n                continue;\n            }\n            const isCustomElement = !!customElements.find(el => el === input);\n            this.runBasicValidation(input, displayValidity, errors, errorList, isCustomElement);\n            const validationErrorEvent = new CustomEvent('form-validating', {\n                detail: {\n                    errors,\n                    form\n                },\n                bubbles: true\n            });\n            this.dispatchEvent(validationErrorEvent);\n        }\n        if (errors.length === 0) {\n            return { valid: true };\n        }\n        if (displayValidity) {\n            errorAlert.hidden = false;\n            errorAlert.focus();\n        }\n        return { valid: false, errors };\n    }\n    clearValidationErrors(target) {\n        if (!canValidate(target, this.form)) {\n            return;\n        }\n        clearInputErrorBorder(target);\n        setValidationMessage(target, '');\n        getField(target).classList.remove('errored');\n        if (target.form) {\n            const { errorAlert, errorList } = this.getErrorAlert(target.form);\n            errorList.querySelectorAll(`a[href=\"#${target.id}\"]`).forEach(a => a.parentElement?.remove());\n            // clear no edits error if it exists as well\n            errorList.querySelector('#no-edits-error')?.remove();\n            if (!errorList.firstElementChild) {\n                errorAlert.hidden = true;\n            }\n        }\n        const clearValidationEvent = new CustomEvent('clear-validation-errors', {\n            detail: {\n                target\n            },\n            bubbles: true\n        });\n        this.dispatchEvent(clearValidationEvent);\n    }\n    showNoChangesMessage(form) {\n        const { errorAlert, errorList } = this.getErrorAlert(form);\n        if (errorList.childElementCount > 0) {\n            while (errorList.firstChild) {\n                errorList.lastChild?.remove();\n            }\n            // clear no edits error if it exists as well\n            errorList.querySelector('#no-edits-error')?.remove();\n        }\n        const errorText = document.createElement('li');\n        errorText.id = 'no-edits-error';\n        errorText.innerText = this.locStrings.thereAreNoEditsToSubmit;\n        errorList.appendChild(errorText);\n        errorAlert.hidden = false;\n        errorAlert.focus();\n    }\n    runBasicValidation(input, displayValidity = true, errors, errorList, isCustomElement) {\n        if (!canValidate(input, this.form)) {\n            return;\n        }\n        const label = getLabel(input);\n        const group = getField(input);\n        if (displayValidity) {\n            setValidationMessage(input, '');\n            group.classList.remove('errored');\n        }\n        for (const validator of this.validators) {\n            const message = validator(input, label);\n            if (!message) {\n                if (!isCustomElement) {\n                    clearInputErrorBorder(input);\n                }\n                continue;\n            }\n            errors.push({ input, message });\n            if (displayValidity) {\n                if (!input.id) {\n                    continue;\n                }\n                setValidationMessage(input, message);\n                group.classList.add('errored');\n                const child = document.createElement('li');\n                child.classList.add('margin-bottom-xs');\n                const a = document.createElement('a');\n                a.href = `#${input.id}`;\n                a.textContent = message;\n                a.classList.add('help', 'help-danger');\n                // ensure focus is set on the custom element\n                a.addEventListener('click', e => {\n                    if (isCustomElement) {\n                        const target = e.target.getAttribute('href');\n                        if (target) {\n                            document.querySelector(target).focus();\n                        }\n                    }\n                });\n                child.appendChild(a);\n                errorList.appendChild(child);\n                if (!isCustomElement) {\n                    input.classList.add(`${input.localName}-danger`);\n                }\n            }\n            break;\n        }\n    }\n}\nif (!window.customElements.get('form-behavior')) {\n    window.FormBehaviorElement = FormBehaviorElement;\n    window.customElements.define('form-behavior', FormBehaviorElement);\n}\n// Check if the required value related properties exist rather than an instance of a form related element.\nfunction isValueElement(target, form) {\n    const element = target;\n    if (element) {\n        return (element instanceof HTMLElement &&\n            'form' in element &&\n            element.form === form &&\n            'validity' in element &&\n            element.validity instanceof ValidityState &&\n            'value' in element &&\n            typeof element.value === 'string' &&\n            'type' in element &&\n            typeof element.type === 'string' &&\n            !['button', 'submit'].includes(element.type));\n    }\n    return false;\n}\nfunction normalizeInputValue(target) {\n    if (target instanceof HTMLTextAreaElement) {\n        target.value = target.value.trim();\n    }\n    else if (target instanceof HTMLInputElement &&\n        (target.type === 'text' || target.type === 'email')) {\n        target.value = target.value.trim();\n    }\n}\nfunction setBusySubmitButton(form, isLoading) {\n    Array.from(form.elements).forEach(element => {\n        if (element instanceof HTMLButtonElement && element.type === 'submit') {\n            element.classList.toggle('is-loading', isLoading);\n        }\n    });\n}\nexport function getLabel(input) {\n    const label = input.labels && input.labels.length\n        ? input.labels[0].textContent\n        : input.getAttribute('aria-label');\n    if (!label) {\n        throw new Error(`${input.nodeName} name=\"${input.name}\" id=\"${input.id}\" has no associated label.`);\n    }\n    return label.trim();\n}\nexport function getField(input) {\n    const group = input.closest('.field');\n    if (!group) {\n        throw new Error(`${input.nodeName} name=\"${input.name}\" id=\"${input.id}\" is not within a .field`);\n    }\n    return group;\n}\nexport function getFieldBody(input) {\n    const body = input.closest('.field-body');\n    if (!body) {\n        throw new Error(`${input.nodeName} name=\"${input.name}\" id=\"${input.id}\" is not within a .field-body`);\n    }\n    return body;\n}\nfunction createErrorNote(input) {\n    const note = document.createElement('p');\n    note.id = generateElementId();\n    input.setAttribute('aria-describedby', `${note.id} ${input.getAttribute('aria-describedby') || ''}`);\n    note.classList.add('field-error');\n    note.setAttribute('data-field-error', '');\n    getFieldBody(input).after(note);\n    return note;\n}\nexport function setValidationMessage(element, message) {\n    const group = getField(element);\n    const note = group.querySelector('[data-field-error]') || createErrorNote(element);\n    note.textContent = message;\n}\nfunction canValidate(target, form) {\n    return isValueElement(target, form) && target.type !== 'hidden';\n}\nexport function navigateAfterSubmit(href, navigationStep) {\n    switch (navigationStep) {\n        case null:\n            // do nothing.\n            return false;\n        case 'follow':\n            if (href) {\n                location.href = href;\n                return true;\n            }\n            return false;\n        case 'hash-reload':\n            if (href) {\n                const search = href.includes('?') ? '' : window.location.search;\n                if (href !== search + window.location.hash) {\n                    const state = (history.state || {});\n                    window.history.pushState(state, document.title, window.location.pathname + search + href); // prevents scrolling to spot until reload\n                }\n                location.reload();\n                return true;\n            }\n            return false;\n        case 'replace':\n            if (href) {\n                location.replace(href);\n                return true;\n            }\n            return false;\n        case 'reload':\n            location.reload();\n            return true;\n        default:\n            throw new Error(`Unexpected navigation attribute value.`);\n    }\n}\n/* Custom elements are not included in HTMLFormControlsCollection so they can't be retrieved by form.elements */\nexport function collectCustomElementsByName(form) {\n    // Compare FormData with form.elements to find missing elements.\n    const formData = Object.fromEntries(new FormData(form));\n    const customElementList = [];\n    const customElements = Object.keys(formData).filter(key => {\n        return !form.elements.namedItem(key);\n    });\n    customElements.forEach(name => {\n        const element = form.querySelector(`[name=\"${name}\"]`);\n        if (element) {\n            customElementList.push(element);\n        }\n    });\n    return customElementList;\n}\nfunction clearInputErrorBorder(input) {\n    input.classList.remove(`${input.localName}-danger`);\n}\nfunction handleSubmitButtonAction(event) {\n    const submitter = event.submitter;\n    const formAction = submitter instanceof HTMLButtonElement && submitter.formAction !== window.location.href\n        ? submitter.formAction\n        : null;\n    return formAction;\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nexport function initPopover(container = document.body) {\n    container.addEventListener('toggle', (event) => {\n        const targetPopover = (event.target instanceof Element &&\n            event.target.closest('details.popover')) ||\n            (event.target instanceof Element &&\n                event.target.shadowRoot?.activeElement?.closest('details.popover'));\n        if (!targetPopover || !targetPopover.open) {\n            return;\n        }\n        const keyHandler = (event) => {\n            if (event.key === 'Escape') {\n                closePopovers();\n            }\n        };\n        const checkTarget = (event) => {\n            if (!(event.target instanceof Element)) {\n                return;\n            }\n            if (!targetPopover?.contains(event.target)) {\n                closePopovers();\n            }\n            if (event.type === 'click' && event.target.closest('[data-popover-close]')) {\n                closePopovers();\n            }\n        };\n        const blurHandler = () => {\n            if (document.activeElement?.nodeName?.toLowerCase() === 'iframe') {\n                closePopovers();\n            }\n        };\n        const closePopovers = () => {\n            container.removeEventListener('focus', checkTarget, true);\n            container.removeEventListener('click', checkTarget);\n            container.removeEventListener('touchstart', checkTarget);\n            container.removeEventListener('keydown', keyHandler);\n            window.removeEventListener('blur', blurHandler);\n            if (targetPopover?.open) {\n                targetPopover.removeAttribute('open');\n            }\n        };\n        container.addEventListener('focus', checkTarget, true);\n        container.addEventListener('click', checkTarget);\n        container.addEventListener('touchstart', checkTarget);\n        container.addEventListener('keydown', keyHandler);\n        window.addEventListener('blur', blurHandler);\n    }, true);\n}\n","// document.documentElement.classList.add(\"debug\");\n\nconst atlasJs = require(\"@microsoft/atlas-js\");\natlasJs.initPopover();\n\ndocument.addEventListener(\"keydown\", (e) => {\n  if (e.ctrlKey || e.metaKey) {\n    document.documentElement.classList.add(\"debug\");\n  }\n});\n\ndocument.addEventListener(\"keyup\", () => {\n  document.documentElement.classList.remove(\"debug\");\n});\n\nconst burger = document.querySelector(\".burger\");\nburger.onclick = () => {\n  burger.classList.toggle(\"burger-expanded\");\n};\n\nclass ModalTriggerElement extends HTMLElement {\n  get modal() {\n    if (!this.sharedId) {\n      return null;\n    }\n    return document.querySelector(`[controlled-by=\"${this.sharedId}\"`);\n  }\n  sharedId = this.getAttribute(\"for\");\n\n  connectedCallback() {\n    this.addEventListener(\"click\", () => {\n      this.modal.hidden = !this.modal.hidden;\n      // being lazy here, I admit\n      if (this.modal.hidden) {\n        document.documentElement.style.cssText = \"\";\n      } else {\n        document.documentElement.style.overflow = \"hidden\";\n      }\n    });\n  }\n}\n\nclass ModalElement extends HTMLElement {\n  static get observedAttributes() {\n    return [\"hidden\"];\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (name === \"hidden\") {\n      console.log(\"Custom square element attributes changed.\");\n    }\n  }\n\n  constructor() {\n    super();\n  }\n  get controlledBy() {\n    if (!this.sharedId) {\n      return null;\n    }\n    return document.querySelector(`[for=\"${this.sharedId}\"`);\n  }\n  sharedId = this.getAttribute(\"controlled-by\");\n\n  connectedCallback() {\n    window.addEventListener(\"CloseModals\", () => {\n      const burger = document.querySelector(\".burger\");\n      burger.classList.toggle(\"burger-expanded\");\n\n      this.hidden = true;\n    });\n    // this.addEventListener(\"click\", (e) => {\n    //   console.log({ sharedId: this.sharedId, controlledBy: this.controlledBy });\n    // });\n  }\n}\n\nif (!window.customElements.get(\"modal-element\")) {\n  window.ModalElement = ModalElement;\n  window.customElements.define(\"modal-element\", ModalElement);\n}\n\nif (!window.customElements.get(\"modal-trigger\")) {\n  window.ModalTriggerElement = ModalTriggerElement;\n  window.customElements.define(\"modal-trigger\", ModalTriggerElement);\n}\n\nwindow.addEventListener(\"click\", (e) => {\n  const content =\n    e.target instanceof Element && e.target.closest(\".modal-content\");\n  if (content) {\n    return;\n  }\n  const target =\n    e.target instanceof Element && e.target.closest(\"modal-element\");\n\n  if (!target) {\n    return;\n  }\n  console.log(\"CloseModals\");\n  window.dispatchEvent(new CustomEvent(\"CloseModals\"));\n});\n"],"names":["$dac34d78ffd9de1b$var$nextId","$dac34d78ffd9de1b$export$cfe7bad09682ff51","$687c546c2c54a24e$export$74d1e9f4105a478b","contentHasChanged","inputMaxLength","inputMinLength","inputRequired","pleaseFixTheFollowingIssues","thereAreNoEditsToSubmit","weEncounteredAnUnexpectedError","$687c546c2c54a24e$export$eff824212e04ca3f","HTMLElement","submitting","initialData","FormData","toDispose","isDirty","commitTimeout","locStrings","Object","assign","Array","from","this","attributes","filter","a","name","startsWith","reduce","map","str","substring","replace","x","toUpperCase","value","validators","validateMinLength","bind","validateRequired","validateMaxLength","constructor","super","canSave","isNew","form","closest","hideUnloadMessage","hasAttribute","connectedCallback","parentElement","HTMLFormElement","setAttribute","errorSummaryContainer","document","createElement","insertAdjacentElement","ownerDocument","readyState","addEventListener","subscribe","window","disconnectedCallback","dispose","target","type","listener","push","removeEventListener","setDirty","initial","URLSearchParams","toString","current","handleEvent","event","handleSubmitEvent","handleUnloadEvent","clearValidationErrors","scheduleCommit","commit","Error","navigate","href","navigationStep","location","search","includes","hash","state","history","pushState","title","pathname","reload","$687c546c2c54a24e$export$7aa55fd9657ff73","getAttribute","clearTimeout","setTimeout","$687c546c2c54a24e$var$isValueElement","HTMLTextAreaElement","HTMLInputElement","trim","async","preventDefault","returnValue","currentTarget","showNoChangesMessage","validationErrorEvent","CustomEvent","detail","bubbles","dispatchEvent","isNavigating","$687c546c2c54a24e$var$setBusySubmitButton","validateForm","valid","url","submitter","HTMLButtonElement","formAction","$687c546c2c54a24e$var$handleSubmitButtonAction","action","params","URL","searchParams","formData","headers","Headers","set","init","get","method","body","JSON","stringify","fromEntries","beforeSubmitEvent","cancelable","request","Request","response","fetch","ok","removeAttribute","errorAlert","errorList","getErrorAlert","errorText","innerText","status","appendChild","hidden","focus","createErrorAlert","formLayout","querySelector","alertId","className","alertText","id","classList","add","append","lastElementChild","input","label","validity","valueMissing","customElements","localName","tooShort","minLength","length","tooLong","maxLength","displayValidity","scope","errors","innerHTML","customElements1","customElementList","keys","key","elements","namedItem","forEach","element","$687c546c2c54a24e$export$6fdbe88c041d855d","contains","$687c546c2c54a24e$var$canValidate","isCustomElement","find","el","runBasicValidation","validationErrorEvent1","$687c546c2c54a24e$var$clearInputErrorBorder","$687c546c2c54a24e$export$e0ddcd48746f2dd9","$687c546c2c54a24e$export$2c9b3f539cb25b05","remove","querySelectorAll","firstElementChild","clearValidationEvent","childElementCount","firstChild","lastChild","labels","textContent","nodeName","$687c546c2c54a24e$export$236350842f3cd9bc","group","validator","message","child","e","ValidityState","isLoading","toggle","$687c546c2c54a24e$var$createErrorNote","note","$687c546c2c54a24e$export$52dd50fe747c85c8","after","FormBehaviorElement","define","container","targetPopover","Element","shadowRoot","activeElement","open","keyHandler","closePopovers","checkTarget","blurHandler","toLowerCase","$00445bee51d6a6cf$export$7ae0af140e650b26","ctrlKey","metaKey","documentElement","$7d4be14eaf8844c4$var$burger","onclick","$7d4be14eaf8844c4$var$ModalTriggerElement","modal","sharedId","style","cssText","overflow","$7d4be14eaf8844c4$var$ModalElement","observedAttributes","attributeChangedCallback","oldValue","newValue","console","log","controlledBy","ModalElement","ModalTriggerElement"],"version":3,"file":"index.302fef65.js.map"}